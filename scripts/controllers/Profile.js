// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require, exports, module) {
    var $, Map, Profile, Scoreboard, Spine, TEMPLATE, User, ZooniverseProfile, config, delay, favoriteTemplate, recentTemplate;
    Spine = require('Spine');
    $ = require('jQuery');
    delay = require('zooniverse/util').delay;
    config = require('zooniverse/config');
    User = require('zooniverse/models/User');
    ZooniverseProfile = require('zooniverse/controllers/Profile');
    Map = require('zooniverse/controllers/Map');
    Scoreboard = require('controllers/Scoreboard');
    TEMPLATE = require('views/Profile');
    favoriteTemplate = require('views/ProfileFavorite');
    recentTemplate = require('views/ProfileRecent');
    Profile = (function(_super) {

      __extends(Profile, _super);

      Profile.prototype.template = TEMPLATE;

      Profile.prototype.favoriteTemplate = favoriteTemplate;

      Profile.prototype.recentTemplate = recentTemplate;

      Profile.prototype.map = null;

      Profile.prototype.userLayer = null;

      Profile.prototype.scoreboard = null;

      Profile.prototype.events = $.extend({
        'click .sign-out': 'signOut'
      }, ZooniverseProfile.prototype.events);

      Profile.prototype.elements = $.extend({
        '.summary .username': 'usernameContainer',
        '.summary .scoreboard': 'scoreboardContainer'
      }, ZooniverseProfile.prototype.elements);

      function Profile() {
        this.signOut = __bind(this.signOut, this);

        this.userChanged = __bind(this.userChanged, this);
        Profile.__super__.constructor.apply(this, arguments);
        this.scoreboard = new Scoreboard({
          el: this.scoreboardContainer,
          forUser: true
        });
      }

      Profile.prototype.userChanged = function() {
        Profile.__super__.userChanged.apply(this, arguments);
        if (User.current != null) {
          return this.usernameContainer.html(User.current.name);
        }
      };

      Profile.prototype.signOut = function(e) {
        e.preventDefault();
        return User.signOut();
      };

      return Profile;

    })(ZooniverseProfile);
    return module.exports = Profile;
  });

}).call(this);
